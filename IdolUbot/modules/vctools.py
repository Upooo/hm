__MODULE__ = "·¥†·¥Ñ·¥õ·¥è·¥è üÍú±"
__HELP__ = """
<blockquote><b>-- ô·¥Ä…¥·¥õ·¥ú·¥Ä…¥ ·¥ú…¥·¥õ·¥ú·¥ã ·¥†·¥Ñ·¥õ·¥è·¥è üÍú±--</b></blockquote>

<blockquote><b>üö¶ ·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú : <code>{0}startvc</code>
ü¶† ·¥ã·¥á·¥õ : ·¥ç·¥ú ü·¥Ä…™ ·¥è ô Ä·¥è ü·¥Ä…¥ Íú±·¥ú·¥Ä Ä·¥Ä …¢ Ä·¥è·¥ú·¥ò.</b></blockquote>
<blockquote><b>üö¶ ·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú : <code>{0}stopvc</code>
ü¶† ·¥ã·¥á·¥õ : ·¥Ä·¥ã ú…™ Ä…™ ·¥è ô Ä·¥è ü·¥Ä…¥ Íú±·¥ú·¥Ä Ä·¥Ä …¢ Ä·¥è·¥ú·¥ò.</b></blockquote>
<blockquote><b>üö¶ ·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú : <code>{0}jvc</code>
ü¶† ·¥ã·¥á·¥õ :  ô·¥á Ä…¢·¥Ä ô·¥ú…¥…¢ ·¥ã·¥á ·¥è ô Ä·¥è ü·¥Ä…¥ Íú±·¥ú·¥Ä Ä·¥Ä …¢ Ä·¥è·¥ú·¥ò ·¥Ä·¥õ·¥Ä·¥ú ·¥Ñ ú·¥Ä…¥…¥·¥á ü.</b></blockquote>
<blockquote><b>üö¶ ·¥ò·¥á Ä…™…¥·¥õ·¥Ä ú : <code>{0}lvc</code>
ü¶† ·¥ã·¥á·¥õ : ·¥ã·¥á ü·¥ú·¥Ä Ä ·¥Ö·¥Ä Ä…™ ·¥è ô Ä·¥è ü·¥Ä…¥ Íú±·¥ú·¥Ä Ä·¥Ä …¢ Ä·¥è·¥ú·¥ò ·¥Ä·¥õ·¥Ä·¥ú ·¥Ñ ú·¥Ä…¥…¥·¥á ü.</b></blockquote>

<blockquote><b>‚ùè …¥·¥Ä…™·¥ã ·¥õ·¥ú Ä·¥ú…¥ ·¥èÍú±  ô…™Íú±·¥Ä ·¥ò·¥Ä·¥ã·¥á :
‚îú  ü…™…¥·¥ã …¢ Ä·¥è·¥ú·¥ò  ü
‚îú ·¥úÍú±·¥á Ä…¥·¥Ä·¥ç·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü
‚ï∞ …™·¥Ö …¢ Ä·¥è·¥ú·¥ò ·¥è Ä ·¥Ñ ú·¥Ä…¥…¥·¥á
·¥Ñ·¥è…¥·¥õ·¥è ú : <code>{0}jvc @xnxxnathan</code></b></blockquote>
"""

from random import randint
from typing import Optional
from pyrogram.types import Message

from pyrogram import Client, enums
from pyrogram.raw.functions.channels import GetFullChannel
from pyrogram.raw.functions.messages import GetFullChat
from pyrogram.raw.functions.phone import CreateGroupCall, DiscardGroupCall, EditGroupCallTitle
from pyrogram.raw.types import InputGroupCall, InputPeerChannel, InputPeerChat
from pyrogram.types import Message
from IdolUbot.core.helpers.txt_cmd import *
from IdolUbot import *

def nat_argsvc(message):
    if len(message.command) > 1:
        return " ".join(message.command[1:])
    return None

async def get_group_call(
    client: Client, message: Message, err_msg: str = "") -> Optional[InputGroupCall]:
    
    chat_peer = await client.resolve_peer(message.chat.id)
    if isinstance(chat_peer, (InputPeerChannel, InputPeerChat)):
        if isinstance(chat_peer, InputPeerChannel):
            full_chat = (
                await client.invoke(GetFullChannel(channel=chat_peer))
            ).full_chat
        elif isinstance(chat_peer, InputPeerChat):
            full_chat = (
                await client.invoke(GetFullChat(chat_id=chat_peer.chat_id))
            ).full_chat
        if full_chat is not None:
            return full_chat.call
    await eor(message, f"<blockquote><b>·¥õ…™·¥Ö·¥Ä·¥ã ·¥Ä·¥Ö·¥Ä ·¥èÍú± ·¥Ö…™ ·¥õ·¥á·¥ç·¥ú·¥ã·¥Ä…¥</b></blockquote>\n<blockquote><b>{err_msg}</b></blockquote>")
    return False

@PY.UBOT("startvc")
async def start_vctools(client, message):
    flags = " ".join(message.command[1:])
    brhsl = await EMO.BERHASIL(client)
    ggl = await EMO.GAGAL(client)
    prs = await EMO.PROSES(client)
    gcr = await EMO.ALASAN(client)
    bbo = await EMO.PUTARAN(client)
    
    mmk = await message.reply(f"<blockquote><b>{prs} ô·¥á…¥·¥õ·¥Ä Ä …¥…™ ú ·¥è·¥õ·¥°...</b></blockquote>")
    vctitle = get_arg(message)
    if flags == enums.ChatType.CHANNEL:
        chat_id = message.chat.title
    else:
        chat_id = message.chat.id
    args = (
        f"<blockquote><b>{brhsl}·¥è ô Ä·¥è ü·¥Ä…¥ Íú±·¥ú·¥Ä Ä·¥Ä ·¥Ä·¥ã·¥õ…™Íú∞</b></blockquote>\n<blockquote><b>{gcr}…¢ Ä·¥è·¥ú·¥ò : </b>{message.chat.title}</blockquote>"
    )
    try:
        if not vctitle:
            await client.invoke(
                CreateGroupCall(
                    peer=(await client.resolve_peer(chat_id)),
                    random_id=randint(10000, 999999999),
                )
            )
        else:
            args += f"\n{bbo}<blockquote><b>·¥õ…™·¥õ ü·¥á : </b>{vctitle}</blockquote>"
            await client.invoke(
                CreateGroupCall(
                    peer=(await client.resolve_peer(chat_id)),
                    random_id=randint(10000, 999999999),
                    title=vctitle,
                )
            )
        await mmk.edit(args)
    except Exception as e:
        await mmk.edit(f"<b>INFO :\n</b> <blockquote><code>{e}</code></blockquote>")


@PY.UBOT("stopvc")
async def stop_vctools(client, message):
    brhsl = await EMO.BERHASIL(client)
    ggl = await EMO.GAGAL(client)
    prs = await EMO.PROSES(client)
    gcr = await EMO.ALASAN(client)
    
    
    hi = await message.reply(f"<blockquote><b>{prs} ô·¥á…¥·¥õ·¥Ä Ä …¥…™ ú ·¥è·¥õ·¥°...</b></blockquote>")
    message.chat.id
    if not (
        group_call := (await get_group_call(client, message, err_msg=", ·¥ã·¥áÍú±·¥Ä ü·¥Ä ú·¥Ä…¥..."))
    ):
        return
    await client.invoke(DiscardGroupCall(call=group_call))
    await hi.edit(
        f"<blockquote><b>{brhsl}·¥è ô Ä·¥è ü·¥Ä…¥ Íú±·¥ú·¥Ä Ä·¥Ä ·¥Ä·¥ã·¥õ…™Íú∞</b></blockquote>\n<blockquote><b>{gcr}…¢ Ä·¥è·¥ú·¥ò : </b>{message.chat.title}</blockquote>"
        )
    
@PY.UBOT("vctitle")
async def set_vctitle(client, message):
    brhsl = await EMO.BERHASIL(client)
    ggl = await EMO.GAGAL(client)
    prs = await EMO.PROSES(client)
    gcr = await EMO.ALASAN(client)
    bbo = await EMO.PUTARAN(client)

    proses = await message.reply(
        f"<blockquote><b>{prs} ô·¥á…¥·¥õ·¥Ä Ä …¥…™ ú ·¥è·¥õ·¥°...</b></blockquote>"
    )

    if len(message.command) < 2:
        return await proses.edit(
            f"<blockquote><b>{ggl} ·¥ç·¥ÄÍú±·¥ú·¥ã·¥ã·¥Ä…¥ ·¥ä·¥ú·¥Ö·¥ú ü  ô·¥Ä Ä·¥ú.</b></blockquote>\n"
            f"<blockquote><b>{bbo} ·¥Ñ·¥è…¥·¥õ·¥è ú :</b> <code>.vctitle Nongkrong Malam</code></blockquote>"
        )

    new_title = " ".join(message.command[1:])

    group_call = await get_group_call(client, message, err_msg=", …¢·¥Ä…¢·¥Ä ü ·¥ç·¥á…¥·¥Ö·¥Ä·¥ò·¥Ä·¥õ·¥ã·¥Ä…¥ ·¥è ô Ä·¥è ü·¥Ä…¥ Íú±·¥ú·¥Ä Ä·¥Ä.")
    if not group_call:
        return

    try:
        await client.invoke(EditGroupCallTitle(call=group_call, title=new_title))
        await proses.edit(
            f"<blockquote><b>{brhsl} ·¥ä·¥ú·¥Ö·¥ú ü ·¥è ô Ä·¥è ü·¥Ä…¥ Íú±·¥ú·¥Ä Ä·¥Ä ·¥Ö…™·¥ò·¥á Ä ô·¥Ä Ä·¥ú…™</b></blockquote>\n"
            f"<blockquote><b>{gcr} …¢ Ä·¥è·¥ú·¥ò :</b> {message.chat.title}</blockquote>\n"
            f"<blockquote><b>{bbo} ·¥ä·¥ú·¥Ö·¥ú ü  ô·¥Ä Ä·¥ú :</b> <code>{new_title}</code></blockquote>"
        )
    except Forbidden:
        await proses.edit(
            f"<blockquote><b>{ggl} …¢·¥Ä…¢·¥Ä ü ·¥ç·¥á…¥…¢·¥ú ô·¥Ä ú ·¥ä·¥ú·¥Ö·¥ú ü :</b></blockquote>\n"
            f"<blockquote><b>{bbo} ·¥ã·¥Ä·¥ç·¥ú ·¥õ…™·¥Ö·¥Ä·¥ã ·¥ç·¥á·¥ç…™ ü…™·¥ã…™ …™·¥¢…™…¥.</b></blockquote>"
        )
    except Exception as e:
        await proses.edit(
            f"<blockquote><b>{ggl} …¢·¥Ä…¢·¥Ä ü ·¥ç·¥á…¥…¢·¥ú ô·¥Ä ú ·¥ä·¥ú·¥Ö·¥ú ü :</b></blockquote>\n"
            f"<blockquote><code>{e}</code></blockquote>"
        )

    
@PY.UBOT("cekos")
async def cekos_vc(client, message):
    brhsl = await EMO.BERHASIL(client)
    ggl = await EMO.GAGAL(client)
    prs = await EMO.PROSES(client)
    gcr = await EMO.ALASAN(client)
    bbo = await EMO.PUTARAN(client)

    x = await message.reply(f"<blockquote><b>{prs} ô·¥á…¥·¥õ·¥Ä Ä …¥…™ ú ·¥è·¥õ·¥°...</b></blockquote>")

    chat = message.command[1] if len(message.command) > 1 else message.chat.id

    try:
        chat_info = await client.get_chat(chat)
        chat_id = chat_info.id
        title = chat_info.title or str(chat_id)
    except Exception as e:
        return await x.edit(f"<blockquote><b>{ggl} …¢·¥Ä…¢·¥Ä ü ·¥ç·¥á…¥…¢·¥Ä·¥ç ô…™ ü …™…¥Íú∞·¥è …¢ Ä·¥è·¥ú·¥ò:</b></blockquote>\n<blockquote><code>{e}</code></blockquote>")

    group_call = await get_group_call(client, message, err_msg=", …¢·¥Ä…¢·¥Ä ü ·¥ç·¥á…¥·¥Ö·¥Ä·¥ò·¥Ä·¥õ·¥ã·¥Ä…¥ ·¥è ô Ä·¥è ü·¥Ä…¥ Íú±·¥ú·¥Ä Ä·¥Ä.")
    if not group_call:
        return

    try:
        participants = await client.call_py.get_participants(chat_id)
        total_participants = len(participants)

        if total_participants == 0:
            return await x.edit(
                f"<blockquote><b>{ggl} ·¥õ…™·¥Ö·¥Ä·¥ã ·¥Ä·¥Ö·¥Ä ·¥ò·¥áÍú±·¥á Ä·¥õ·¥Ä ·¥Ö…™ ·¥è ô Ä·¥è ü·¥Ä…¥ Íú±·¥ú·¥Ä Ä·¥Ä!</b></blockquote>"
            )

        mentions = []
        for participant in participants:
            try:
                user = await client.get_users(participant.user_id)
                mention = user.mention
                mic_status = "üéôÔ∏è Unmuted" if participant.muted else "üîá Muted"
                volume = participant.volume
                mentions.append(f"‚Ä¢ {mention} | {mic_status} | üîä {volume}%")
            except Exception as e:
                mentions.append(f"‚Ä¢ <code>{participant.user_id}</code> | ‚ùì Status Unknown")

        mentions_text = "\n".join(mentions)

        text = (
            f"<blockquote><b>{brhsl} ·¥ò·¥áÍú±·¥á Ä·¥õ·¥Ä ·¥è ô Ä·¥è ü·¥Ä…¥ Íú±·¥ú·¥Ä Ä·¥Ä</b></blockquote>\n"
            f"<blockquote><b>{gcr} …¢ Ä·¥è·¥ú·¥ò :</b> {title}</blockquote>\n"
            f"<blockquote><b>{bbo} ·¥õ·¥è·¥õ·¥Ä ü :</b> <code>{total_participants}</code> ·¥è Ä·¥Ä…¥…¢</blockquote>\n\n"
            f"<blockquote>{mentions_text}</blockquote>"
        )
        await x.edit(text)

    except Exception as e:
        await x.edit(f"<blockquote><b>{ggl} ·¥ã·¥áÍú±·¥Ä ü·¥Ä ú·¥Ä…¥ :</b></blockquote>\n<blockquote><code>{e}</code></blockquote>")

@PY.UBOT("jvc|naik|jvcs")
@PY.IDOL("cjvc|cnaik|cjvcs")
@PY.TOP_CMD
@PY.GROUP
async def join_vc(client, message: Message):
    brhsl = await EMO.BERHASIL(client)
    ggl = await EMO.GAGAL(client)
    prs = await EMO.PROSES(client)
    gcr = await EMO.ALASAN(client)
    bbo = await EMO.PUTARAN(client)

    try:
        mex = await message.reply(f"<blockquote><b>{prs} ô·¥á…¥·¥õ·¥Ä Ä …¥…™ ú ·¥è·¥õ·¥° …¥·¥Ä…™·¥ã...</b></blockquote>")

        if len(message.command) > 1:
            target = message.command[1]

            if target.startswith("https://t.me/+"):
                chat = await client.get_chat(target)

            elif target.startswith("https://t.me/"):
                username = target.replace("https://t.me/", "").strip("/")
                chat = await client.get_chat(username)

            elif target.startswith("@"):
                chat = await client.get_chat(target)

            else:
                try:
                    chat_id = int(target)
                    chat = await client.get_chat(chat_id)
                except ValueError:
                    return await mex.edit(f"<blockquote><b>{ggl} …™·¥Ö ·¥õ…™·¥Ö·¥Ä·¥ã ·¥†·¥Ä ü…™·¥Ö.</b></blockquote>")
        else:
            chat = await client.get_chat(message.chat.id)

        chat_id = chat.id
        chat_name = chat.title

        await client.call_py.play(chat_id)
        await client.call_py.mute_stream(chat_id)

        await mex.edit(
            f"<blockquote><b>{brhsl}  ô·¥á Ä ú·¥ÄÍú±…™ ü …¥·¥Ä…™·¥ã ·¥ã·¥á ·¥è ô Ä·¥è ü·¥Ä…¥ Íú±·¥ú·¥Ä Ä·¥Ä.</b></blockquote>\n"
            f"<blockquote><b>{gcr} …¥·¥Ä·¥ç·¥Ä …¢·¥Ñ : {chat_name}\n{bbo} …™·¥Ö …¢·¥Ñ: <code>{chat_id}</code></b></blockquote>"
        )

    except Exception as e:
        await mex.edit(f"<blockquote><b>{ggl} …¢·¥Ä…¢·¥Ä ü :</b></blockquote>\n<blockquote><code>{e}</code></blockquote>")

@PY.UBOT("lvc|turun|lvcs")
@PY.IDOL("clvc|cturun|clvcs")
@PY.TOP_CMD
@PY.GROUP
async def leave_vc(client, message: Message):
    brhsl = await EMO.BERHASIL(client)
    ggl = await EMO.GAGAL(client)
    prs = await EMO.PROSES(client)
    gcr = await EMO.ALASAN(client)
    bbo = await EMO.PUTARAN(client)

    try:
        mex = await message.reply(f"<blockquote><b>{prs} ô·¥á…¥·¥õ·¥Ä Ä …¥…™ ú ·¥è·¥õ·¥° ·¥õ·¥ú Ä·¥ú…¥...</b></blockquote>")

        if len(message.command) > 1:
            target = message.command[1]

            if target.startswith("https://t.me/"):
                username = target.replace("https://t.me/", "").strip("/")
                chat = await client.get_chat(username)
            elif target.startswith("@"):
                chat = await client.get_chat(target)
            else:
                chat_id = int(target)
                chat = await client.get_chat(chat_id)
        else:
            chat = await client.get_chat(message.chat.id)

        chat_id = chat.id
        chat_name = chat.title

        await client.call_py.leave_call(chat_id)

        await mex.edit(
            f"<blockquote><b>{brhsl}  ô·¥á Ä ú·¥ÄÍú±…™ ü ·¥ã·¥á ü·¥ú·¥Ä Ä ·¥Ö·¥Ä Ä…™ ·¥è ô Ä·¥è ü·¥Ä…¥ Íú±·¥ú·¥Ä Ä·¥Ä.</b></blockquote>"
            f"<blockquote><b>{gcr} …¥·¥Ä·¥ç·¥Ä …¢·¥Ñ : {chat_name}\n{bbo} …™·¥Ö …¢·¥Ñ : <code>{chat_id}</code></b></blockquote>"
        )
    except Exception as e:
        await mex.edit(f"<blockquote><b>{ggl} …¢·¥Ä…¢·¥Ä ü :</b></blockquote>\n<blockquote><code>{e}</code></blockquote>")
